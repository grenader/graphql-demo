type Query {
    greeting: String
    hello: String
    artifactRepositories : [ArtifactRepository]
    artifactRepository(id : ID!) : ArtifactRepository
    project(slug: ID!): Project
    employees: [Employee]
    filterEmployees(name: String!, salary: Float!):  [Employee]!
    filter2Employees(filter: LinkFilter):  [Employee]!
    employee(id: ID!): Employee
}

input LinkFilter {
    name: String
    salary: Float
}

type ArtifactRepository {
    id: ID!
    name: String!
    url: String!
    snapshotsEnabled: Boolean
}

type Project {
    slug: ID!
    name: String!
    repositoryUrl: String!
    status: ProjectStatus!
    releases: [Release]
}

type Release {
    version: String!
    status: ReleaseStatus!
    current: Boolean
}

enum ProjectStatus {
    ACTIVE
    COMMUNITY
    INCUBATING
    ATTIC
}

enum ReleaseStatus {
    GENERAL_AVAILABILITY
    MILESTONE
    SNAPSHOT
}

type Mutation {
    # restricted
    updateSalary(input: UpdateSalaryInput!): UpdateSalaryPayload
}
type Employee {
    id: ID!
    name: String
    # restricted
    salary: String
}

input UpdateSalaryInput {
    employeeId: ID!
    salary: String!
}
type UpdateSalaryPayload {
    success: Boolean!
    employee: Employee
}
